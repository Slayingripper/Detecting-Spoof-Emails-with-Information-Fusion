diff --git a/Prototype/Machinelearning.py b/Prototype/Machinelearning.py
index fb0a5c9..9805afc 100644
--- a/Prototype/Machinelearning.py
+++ b/Prototype/Machinelearning.py
@@ -1,140 +1,143 @@
-import random
-import time
-import nltk
-import csv
-import threading
-from textblob import TextBlob
-from nltk.corpus import stopwords
-from textblob.classifiers import NaiveBayesClassifier
-from textblob.classifiers import DecisionTreeClassifier
-from textblob.classifiers import MaxEntClassifier
-from textblob.classifiers import BaseClassifier
-from wandb import magic
-import wandb
-
-wandb.init(magic=True)
-wandb.init(project="uncategorized")
-# add file paths here
-file1 = "/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Dataset/SMSSpamCollection"
-file2 = "/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Dataset/SMSSpamCollection"
-
-
-# we calculate the row count and and the training amount we are going to use for
-# our classifier the current dataset current has around 6k or spam and ham (mixed)
-row_count = len(list(csv.reader(open(file1))))
-print(row_count)
-
-
-dothis = row_count - 1
-# using int to round the train amount (Lower BOUND)
-trainamount = int(row_count / 4)
-print(trainamount)
-# Since the train amount is going to be 1/4 of the data set we need to increment
-# by 1 so that we start classifying the next row and until the end of the file
-therest = trainamount + 1
-print(therest)
-
-
-# bigchungas 55k unclassified
-big_count = len(list(csv.reader(open(file2))))
-big_counter = big_count - 1
-print(big_count)
-
-
-# using stop words causes a massive INCREASE in import time so we have to use
-# a specific one to reduce the time taken , for example "english"
-# if left blank the stopwords function of NLTK searches all of its dictionaries
-# around 24! so if on average it takes 15 seconds to check it will take 245s
-# to check all of them not including sorting them into tuples
-def get_list_tuples(read_file):
-    list_tuples = []
-    with open(read_file, "r", encoding="utf-8", errors="ignore") as r:
-        c = 0
-        for line in r:
-            tabsep = line.strip().split("\t")
-            msg = TextBlob(tabsep[1])
-            try:
-                words = msg.words
-            except:
-                continue
-            for word in words:
-                if word not in stopwords.words("english") and not word.isdigit():
-                    list_tuples.append((word.lower(), tabsep[0]))
-            c += 1
-            if c == row_count:
-                break
-        return list_tuples
-
-
-# used for the super extreme case
-def get_list_spam(read_file):
-    list_tuples = []
-    with open(read_file, "r", encoding="utf-8", errors="ignore") as r:
-        c = 0
-        for line in r:
-            tabsep = line.strip().split("\t")
-            msg = TextBlob(tabsep[1])
-            try:
-                words = msg.words
-            except:
-                continue
-            for word in words:
-                if word not in stopwords.words("english") and not word.isdigit():
-                    list_tuples.append((word.lower(), tabsep[0]))
-            c += 1
-            # print(c)
-            if c == big_counter:
-                break
-        return list_tuples
-
-
-print("importing data...")
-a = time.time()
-entire_data = get_list_tuples(file1)
-unknown_data = get_list_spam(file2)
-
-
-print("It took " + str(time.time() - a) + " seconds to import data")
-print("data imported")
-print("shuffle the data")
-random.seed(1)
-random.shuffle(entire_data)
-random.shuffle(unknown_data)
-
-
-# train = entire_data[:row_count]
-# test = entire_data[:row_count]
-
-
-train = entire_data[:row_count]
-# train = unknown_data[1:2000]
-test = unknown_data[:big_count]
-print("training data")
-a = time.time()
-cl = NaiveBayesClassifier(train)
-# cl2 = MaxEntClassifier(train)
-# cl3 = DecisionTreeClassifier("call the police")
-# Timing and calculate accuracy
-print("It took " + str(time.time() - a) + " seconds to train data")
-print("data trained, now checking accuracy:")
-
-a = time.time()
-accuracy = cl.accuracy(test)
-# acc2 = cl2.accuracy(test)
-print("accuracy: " + str(accuracy))
-# print ("accuracy: "+str(acc2))
-print("It took " + str(time.time() - a) + "to calculate the accuracy")
-print(cl.classify("Oops, I'll let you know when my roommate's done"))  # ham
-print(
-    cl.classify(
-        "Get a brand new mobile phone by being an agent of The Mob! Plus loads more goodies! For more info just text MAT to 87021"
-    )
-)  # spam
-print(
-    cl.classify(
-        "Doctors hate him, see how this man grew his dick upto six inches with this new method!"
-    )
-)  # spam
-print(cl.classify("You just won $32432840928432 zimbabewewewewew dolla "))
-# from google.colab import output
-# output.eval_js('new Audio("https://upload.wikimedia.org/wikipedia/commons/0/05/Beep-09.ogg").play()')
+cl = None
+def machinelearning():
+    global cl
+    import random
+    import time
+    import nltk
+    import csv
+    import threading
+    from textblob import TextBlob
+    from nltk.corpus import stopwords
+    from textblob.classifiers import NaiveBayesClassifier
+    from textblob.classifiers import DecisionTreeClassifier
+    from textblob.classifiers import MaxEntClassifier
+    from textblob.classifiers import BaseClassifier
+    from wandb import magic
+    import wandb
+
+    wandb.init(magic=True)
+    wandb.init(project="uncategorized")
+    # add file paths here
+    file1 = "/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Dataset/SMSSpamCollection"
+    file2 = "/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Dataset/SMSSpamCollection"
+
+
+    # we calculate the row count and and the training amount we are going to use for
+    # our classifier the current dataset current has around 6k or spam and ham (mixed)
+    row_count = len(list(csv.reader(open(file1))))
+    print(row_count)
+
+
+    dothis = row_count - 1
+    # using int to round the train amount (Lower BOUND)
+    trainamount = int(row_count / 4)
+    print(trainamount)
+    # Since the train amount is going to be 1/4 of the data set we need to increment
+    # by 1 so that we start classifying the next row and until the end of the file
+    therest = trainamount + 1
+    print(therest)
+
+
+    # bigchungas 55k unclassified
+    big_count = len(list(csv.reader(open(file2))))
+    big_counter = big_count - 1
+    print(big_count)
+
+
+    # using stop words causes a massive INCREASE in import time so we have to use
+    # a specific one to reduce the time taken , for example "english"
+    # if left blank the stopwords function of NLTK searches all of its dictionaries
+    # around 24! so if on average it takes 15 seconds to check it will take 245s
+    # to check all of them not including sorting them into tuples
+    def get_list_tuples(read_file):
+        list_tuples = []
+        with open(read_file, "r", encoding="utf-8", errors="ignore") as r:
+            c = 0
+            for line in r:
+                tabsep = line.strip().split("\t")
+                msg = TextBlob(tabsep[1])
+                try:
+                    words = msg.words
+                except:
+                    continue
+                for word in words:
+                    if word not in stopwords.words("english") and not word.isdigit():
+                        list_tuples.append((word.lower(), tabsep[0]))
+                c += 1
+                if c == row_count:
+                    break
+            return list_tuples
+
+
+    # used for the super extreme case
+    def get_list_spam(read_file):
+        list_tuples = []
+        with open(read_file, "r", encoding="utf-8", errors="ignore") as r:
+            c = 0
+            for line in r:
+                tabsep = line.strip().split("\t")
+                msg = TextBlob(tabsep[1])
+                try:
+                    words = msg.words
+                except:
+                    continue
+                for word in words:
+                    if word not in stopwords.words("english") and not word.isdigit():
+                        list_tuples.append((word.lower(), tabsep[0]))
+                c += 1
+                # print(c)
+                if c == big_counter:
+                    break
+            return list_tuples
+
+
+    print("importing data...")
+    a = time.time()
+    entire_data = get_list_tuples(file1)
+    unknown_data = get_list_spam(file2)
+
+
+    print("It took " + str(time.time() - a) + " seconds to import data")
+    print("data imported")
+    print("shuffle the data")
+    random.seed(1)
+    random.shuffle(entire_data)
+    random.shuffle(unknown_data)
+
+
+    # train = entire_data[:row_count]
+    # test = entire_data[:row_count]
+
+
+    train = entire_data[:row_count]
+    # train = unknown_data[1:2000]
+    test = unknown_data[:big_count]
+    print("training data")
+    a = time.time()
+    cl = NaiveBayesClassifier(train)
+    # cl2 = MaxEntClassifier(train)
+    # cl3 = DecisionTreeClassifier("call the police")
+    # Timing and calculate accuracy
+    print("It took " + str(time.time() - a) + " seconds to train data")
+    print("data trained, now checking accuracy:")
+
+    a = time.time()
+    accuracy = cl.accuracy(test)
+    # acc2 = cl2.accuracy(test)
+    print("accuracy: " + str(accuracy))
+    # print ("accuracy: "+str(acc2))
+    print("It took " + str(time.time() - a) + "to calculate the accuracy")
+    print(cl.classify("Oops, I'll let you know when my roommate's done"))  # ham
+    print(
+        cl.classify(
+            "Get a brand new mobile phone by being an agent of The Mob! Plus loads more goodies! For more info just text MAT to 87021"
+        )
+    )  # spam
+    print(
+        cl.classify(
+            "Doctors hate him, see how this man grew his dick upto six inches with this new method!"
+        )
+    )  # spam
+    print(cl.classify("You just won $32432840928432 zimbabewewewewew dolla "))
+    # from google.colab import output
+    # output.eval_js('new Audio("https://upload.wikimedia.org/wikipedia/commons/0/05/Beep-09.ogg").play()')
diff --git a/Prototype/__pycache__/Machinelearning.cpython-37.pyc b/Prototype/__pycache__/Machinelearning.cpython-37.pyc
index 40bebc7..510e9c0 100644
Binary files a/Prototype/__pycache__/Machinelearning.cpython-37.pyc and b/Prototype/__pycache__/Machinelearning.cpython-37.pyc differ
diff --git a/Prototype/start.py b/Prototype/start.py
index ed9a373..f60d4e9 100644
--- a/Prototype/start.py
+++ b/Prototype/start.py
@@ -9,6 +9,7 @@ import time
 from tqdm import tqdm
 import sys
 from colorama import init
+from Machinelearning import *
 
 init(strip=not sys.stdout.isatty())  # strip colors if stdout is redirected
 from termcolor import cprint
@@ -18,8 +19,8 @@ parser = argparse.ArgumentParser(description="This is my help")
 
 args = parser.parse_args()
 
-
-cprint(figlet_format("P.E.A", font="isometric1"), attrs=["bold"])
+#Python EMAIL NEURAL IDETIFICATION SYSTEM
+cprint(figlet_format("P.E.N.I.S", font="isometric1"), attrs=["bold"])
 # ask user for Method to use
 questions = [
     inquirer.List(
@@ -33,8 +34,7 @@ answers = inquirer.prompt(questions)
 
 if answers["Method"] == "Machine Learning":
     print("This might take a while.....")
-    from Machinelearning import *
-
+    machinelearning()
     # NaiveBayesClassifier()
     MLquestions = [
         inquirer.List(
@@ -63,13 +63,18 @@ if answers["Method"] == "Machine Learning":
 
         spamsubject = input("Type something to test this out: ")
         print(cl.classify(spamsubject))
-        from domaincheck import *
-        from domainextcheck import *
-        from grammar import *
-
-        SpellChecker(spamsubject)
-        domaincheck(spamsubject)
-        domainextcheck(spamsubject)
+        
+        from keychecker import *
+        keywords(spamsubject)
+       # from grammar import *
+       # SpellChecker(spamsubject)
+        #from domaincheck import *
+        #from domainextcheck import *
+        
+
+        #SpellChecker(spamsubject)
+        #domaincheck(spamsubject)
+        #domainextcheck(spamsubject)
         answers = inquirer.prompt(MLquestions)
 
 elif answers["Method"] == "Neural Network":
diff --git a/Prototype/wandb/debug.log b/Prototype/wandb/debug.log
index 2d255cf..12251e5 100644
--- a/Prototype/wandb/debug.log
+++ b/Prototype/wandb/debug.log
@@ -1,94 +1,18 @@
-2020-02-05 09:06:36,557 DEBUG   MainThread:94865 [wandb_config.py:_load_defaults():111] no defaults not found in config-defaults.yaml
-2020-02-05 09:06:36,562 DEBUG   MainThread:94865 [cmd.py:execute():728] Popen(['git', 'cat-file', '--batch-check'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=<valid stream>)
-2020-02-05 09:06:36,568 DEBUG   MainThread:94865 [cmd.py:execute():728] Popen(['git', 'rev-parse', '--show-toplevel'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:36,572 DEBUG   MainThread:94865 [cmd.py:execute():728] Popen(['git', 'status', '--porcelain', '--untracked-files'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:36,602 DEBUG   MainThread:94865 [run_manager.py:__init__():535] Initialized sync for Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74
-2020-02-05 09:06:36,605 INFO    MainThread:94865 [run_manager.py:wrap_existing_process():1133] wrapping existing process 94856
-2020-02-05 09:06:36,605 WARNING MainThread:94865 [io_wrap.py:register():104] SIGWINCH handler was not None: <Handlers.SIG_DFL: 0>
-2020-02-05 09:06:36,608 DEBUG   MainThread:94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): pypi.org:443
-2020-02-05 09:06:36,670 DEBUG   MainThread:94865 [connectionpool.py:_make_request():437] https://pypi.org:443 "GET /pypi/wandb/json HTTP/1.1" 200 40617
-2020-02-05 09:06:36,692 INFO    MainThread:94865 [run_manager.py:init_run():918] system metrics and metadata threads started
-2020-02-05 09:06:36,693 INFO    MainThread:94865 [run_manager.py:init_run():952] upserting run before process can begin, waiting at most 10 seconds
-2020-02-05 09:06:36,700 DEBUG   Thread-14 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:06:36,967 DEBUG   Thread-14 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 716
-2020-02-05 09:06:36,977 INFO    Thread-14 :94865 [run_manager.py:_upsert_run():1037] saving patches
-2020-02-05 09:06:36,977 DEBUG   Thread-14 :94865 [cmd.py:execute():728] Popen(['git', 'rev-parse', '--show-toplevel'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:36,984 DEBUG   Thread-14 :94865 [cmd.py:execute():728] Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:36,990 DEBUG   Thread-14 :94865 [cmd.py:execute():728] Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:37,027 DEBUG   Thread-14 :94865 [cmd.py:execute():728] Popen(['git', 'version'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:37,046 DEBUG   Thread-14 :94865 [cmd.py:execute():728] Popen(['git', 'merge-base', 'HEAD', '7d7c44a973802de3bb46920bffc54af6ad00cfe3'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
-2020-02-05 09:06:37,052 INFO    Thread-14 :94865 [run_manager.py:_upsert_run():1041] saving pip packages
-2020-02-05 09:06:37,053 INFO    Thread-14 :94865 [run_manager.py:_upsert_run():1043] initializing streaming files api
-2020-02-05 09:06:37,054 INFO    Thread-14 :94865 [run_manager.py:_upsert_run():1050] unblocking file change observer, beginning sync with W&B servers
-2020-02-05 09:06:37,055 INFO    MainThread:94865 [run_manager.py:wrap_existing_process():1150] informing user process we are ready to proceed
-2020-02-05 09:06:37,058 INFO    MainThread:94865 [run_manager.py:_sync_etc():1257] entering loop for messages from user process
-2020-02-05 09:06:37,059 DEBUG   Thread-15 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:06:37,259 DEBUG   Thread-15 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 46
-2020-02-05 09:06:37,563 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/config.yaml
-2020-02-05 09:06:37,573 DEBUG   Thread-3  :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:06:37,796 DEBUG   Thread-3  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 797
-2020-02-05 09:06:37,799 INFO    Thread-3  :94865 [run_manager.py:_on_file_created():671] file/dir created: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:06:37,800 INFO    Thread-3  :94865 [run_manager.py:_on_file_created():671] file/dir created: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/requirements.txt
-2020-02-05 09:06:37,800 INFO    Thread-3  :94865 [run_manager.py:_on_file_created():671] file/dir created: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/diff.patch
-2020-02-05 09:06:37,801 INFO    Thread-3  :94865 [run_manager.py:_on_file_created():671] file/dir created: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:06:39,077 DEBUG   Thread-7  :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:06:39,273 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:06:39,567 DEBUG   Thread-16 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:06:39,787 DEBUG   Thread-16 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 914
-2020-02-05 09:06:39,791 DEBUG   Thread-16 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): storage.googleapis.com:443
-2020-02-05 09:06:40,232 DEBUG   Thread-16 :94865 [connectionpool.py:_make_request():437] https://storage.googleapis.com:443 "PUT /wandb-production.appspot.com/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/___batch_archive_1.tgz?Expires=1580893669&GoogleAccessId=gorilla-cloud-storage%40wandb-production.iam.gserviceaccount.com&Signature=Aq0IjkWLUm%2BjfBnr%2BBMrap%2BnGu3jD%2BCwlxCY3SpSZfGMGNGVoDAhRWFz%2F6JNg9AfReSQQCe4fcPRLUBOqzm%2B1ym%2FfGczS%2BhiROGHMuMWBDCE3rCLY1CLFHKS3TJGJl%2F9SSU4pCuX2OonDBw3kaVkfvlgVMyGiPGc5bNNRrnHx0bohKgNd6%2Bsv7SnlhMk%2Fp%2F1bsLFOnMP%2Fzr0Zj2YPoVzyE5Aq3eY%2BxN6b40LAmWKc4o9BBu7Iom4rMU5Eg%2By2yFghLErzuRn%2FTkvuOyBt21ZI7%2FM98oAn8SLMoTTsp876OKcIiE8aKE153D%2FIRpijWnCpXdz5kJrecUm%2BZ%2FVMzGDxA%3D%3D HTTP/1.1" 200 0
-2020-02-05 09:06:52,263 DEBUG   Thread-15 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:06:52,518 DEBUG   Thread-15 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 46
-2020-02-05 09:06:53,565 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:06:57,525 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:06:57,566 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:06:59,659 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:07:04,076 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:07:04,568 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:07:05,569 INFO    Thread-3  :94865 [run_manager.py:_on_file_created():671] file/dir created: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-events.jsonl
-2020-02-05 09:07:07,522 DEBUG   Thread-15 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:07:07,699 DEBUG   Thread-15 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 46
-2020-02-05 09:07:07,715 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:07:09,570 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:07:22,703 DEBUG   Thread-15 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:07:22,875 DEBUG   Thread-15 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 46
-2020-02-05 09:07:25,575 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:07:35,578 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-events.jsonl
-2020-02-05 09:07:35,742 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:07:37,879 DEBUG   Thread-15 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:07:38,065 DEBUG   Thread-15 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 46
-2020-02-05 09:07:41,580 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:07:50,979 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:07:51,584 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:07:53,074 DEBUG   Thread-15 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:07:53,248 DEBUG   Thread-15 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 46
-2020-02-05 09:07:56,588 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:07:57,589 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:08:00,591 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:08:01,144 INFO    MainThread:94865 [run_manager.py:_sync_etc():1280] received message from user process: {"exitcode": 1}
-2020-02-05 09:08:01,145 INFO    MainThread:94865 [run_manager.py:_sync_etc():1366] closing log streams and sending exitcode to W&B
-2020-02-05 09:08:01,149 INFO    MainThread:94865 [run_manager.py:shutdown():1057] shutting down system stats and metadata service
-2020-02-05 09:08:01,286 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:08:01,592 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-events.jsonl
-2020-02-05 09:08:01,593 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/output.log
-2020-02-05 09:08:01,783 INFO    MainThread:94865 [run_manager.py:shutdown():1069] stopping streaming files and file change observer
-2020-02-05 09:08:02,593 INFO    Thread-3  :94865 [run_manager.py:_on_file_modified():682] file/dir modified: /home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion/Prototype/wandb/run-20200205_090635-pl5ugb74/wandb-metadata.json
-2020-02-05 09:08:02,610 DEBUG   MainThread:94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:08:02,815 DEBUG   MainThread:94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 797
-2020-02-05 09:08:03,573 DEBUG   Thread-19 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:08:03,669 DEBUG   Thread-20 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:08:03,771 DEBUG   Thread-21 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
-2020-02-05 09:08:03,818 DEBUG   Thread-19 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 881
-2020-02-05 09:08:03,826 DEBUG   Thread-19 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): storage.googleapis.com:443
-2020-02-05 09:08:03,888 DEBUG   Thread-20 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 911
-2020-02-05 09:08:03,893 DEBUG   Thread-20 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): storage.googleapis.com:443
-2020-02-05 09:08:04,020 DEBUG   Thread-21 :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 876
-2020-02-05 09:08:04,026 DEBUG   Thread-21 :94865 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): storage.googleapis.com:443
-2020-02-05 09:08:04,283 DEBUG   Thread-19 :94865 [connectionpool.py:_make_request():437] https://storage.googleapis.com:443 "PUT /wandb-production.appspot.com/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/config.yaml?Expires=1580893753&GoogleAccessId=gorilla-cloud-storage%40wandb-production.iam.gserviceaccount.com&Signature=T3Ta4JVIzJO42ABHEbbB8SR6lkagcd0A8eqNXT2OhnQzdUsIl8sbg8VnxqWc4YgLNyKgde%2FyKJBV1MxBXBdUN04VTOs%2FiiBBnOeq2q97AQimo%2FOSDs5fuBc6uYIw8glfNS9kPefPyYXdarQuH7T4sNzzURNEt61HU1%2FqNLDS9INgdWYNB6Z0veAYXI8omMZ9tKbQgh%2FcxnQhEeF7WW%2FiAhnEdCJJBbfWKnqAxzepMou0ARQ1yY1vcSPcnRGwLpyISFoyTuHQ1AFrqX4nPgdZVapmweXH1EnHkEgd7Pr1zYnsUz7QxqyNGzi3bOMBdlkszUhs58hjQFrDPDdqweEAUw%3D%3D HTTP/1.1" 200 0
-2020-02-05 09:08:04,430 DEBUG   Thread-20 :94865 [connectionpool.py:_make_request():437] https://storage.googleapis.com:443 "PUT /wandb-production.appspot.com/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/wandb-metadata.json?Expires=1580893753&GoogleAccessId=gorilla-cloud-storage%40wandb-production.iam.gserviceaccount.com&Signature=JvJ6EMt%2Fk5XbE3F7fSdqOcvc6rGr35QxaCcj0gnd7t2GSlztyaVvj9HBmW8Z6VP5lZ1WyhFgJsqC7NW2Xwj%2Fi8pzQY1n5xdl8QHE%2B%2BBLXgQfjd9hk%2B0dRIlWx1f3USbeFKCc1CMSzCkl65EJiPzyXhzdwyudkJ8jdLcecUidJ3f32D9BRbivoAunbiJNgmd%2FPLHQCX81Xxv7XrGsnq75ychRew0OLtOt5HeeE0gNyxweLazVuzQNJ%2BUtqX6LqEDEXM98aX2Z8L4%2FclGM8mhH%2BMlMCYOJaOjA%2FyYECTXHRsYHcFbOA%2BqNuaED8Jq18O%2FRbHdPjo3Du4oy%2BBlfe63QpQ%3D%3D HTTP/1.1" 200 0
-2020-02-05 09:08:04,440 DEBUG   Thread-21 :94865 [connectionpool.py:_make_request():437] https://storage.googleapis.com:443 "PUT /wandb-production.appspot.com/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/output.log?Expires=1580893753&GoogleAccessId=gorilla-cloud-storage%40wandb-production.iam.gserviceaccount.com&Signature=Wy2wufgSU7EjOd5WyROAt8AapRxjxgO4SV1%2BEdfw7pYJ6Du%2BTCH%2FLd9KLvq6a%2FtxDbCnej15xFUuDAZ1Pp302HPo5Kt7nZZqeCHcV9jaW%2B0hxKNym6joxclWjdciqhtqtBPT6n6BngmODRp6%2BCR%2FrPBgAncaLuSdbbrzsvRpCAODJJ9o7G%2Ff%2BkZ2JGXhSVWLUIOAlvhs5ydMPqV1wjGJjpdsLv1CYak20EGMqmYihkYLYAQFlWBNN7f%2F9Zr459GugKoyoTDeUW%2Bci0KX4qDX7%2FIsrDgodwsqZmQ4FB7XBl2kOK4Z6FU81XCj7707HXnYLebZ3IuVG%2FtvMHExA6gPyw%3D%3D HTTP/1.1" 200 0
-2020-02-05 09:08:04,741 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 311
-2020-02-05 09:08:04,875 DEBUG   Thread-7  :94865 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /files/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/pl5ugb74/file_stream HTTP/1.1" 200 308
-2020-02-05 09:08:04,877 INFO    MainThread:94865 [run_manager.py:_sync_etc():1418] syncing files to cloud storage
-2020-02-05 09:08:05,633 INFO    MainThread:94865 [run_manager.py:_sync_etc():1433] syncing complete: https://app.wandb.ai/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/runs/pl5ugb74
-2020-02-05 09:08:05,633 INFO    MainThread:94865 [pl5ugb74:run_manager.py:_sync_etc():1433] syncing complete: https://app.wandb.ai/slayingripper/Detecting-Spoof-Emails-with-Information-Fusion-Prototype/runs/pl5ugb74
+2020-02-05 12:44:43,930 DEBUG   MainThread:105395 [wandb_config.py:_load_defaults():111] no defaults not found in config-defaults.yaml
+2020-02-05 12:44:43,935 DEBUG   MainThread:105395 [cmd.py:execute():728] Popen(['git', 'cat-file', '--batch-check'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=<valid stream>)
+2020-02-05 12:44:43,940 DEBUG   MainThread:105395 [cmd.py:execute():728] Popen(['git', 'rev-parse', '--show-toplevel'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
+2020-02-05 12:44:43,944 DEBUG   MainThread:105395 [cmd.py:execute():728] Popen(['git', 'status', '--porcelain', '--untracked-files'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
+2020-02-05 12:44:43,965 DEBUG   MainThread:105395 [run_manager.py:__init__():535] Initialized sync for Detecting-Spoof-Emails-with-Information-Fusion-Prototype/d2m10lz9
+2020-02-05 12:44:43,969 INFO    MainThread:105395 [run_manager.py:wrap_existing_process():1133] wrapping existing process 105386
+2020-02-05 12:44:43,969 WARNING MainThread:105395 [io_wrap.py:register():104] SIGWINCH handler was not None: <Handlers.SIG_DFL: 0>
+2020-02-05 12:44:43,971 DEBUG   MainThread:105395 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): pypi.org:443
+2020-02-05 12:44:44,038 DEBUG   MainThread:105395 [connectionpool.py:_make_request():437] https://pypi.org:443 "GET /pypi/wandb/json HTTP/1.1" 200 40617
+2020-02-05 12:44:44,061 INFO    MainThread:105395 [run_manager.py:init_run():918] system metrics and metadata threads started
+2020-02-05 12:44:44,062 INFO    MainThread:105395 [run_manager.py:init_run():952] upserting run before process can begin, waiting at most 10 seconds
+2020-02-05 12:44:44,069 DEBUG   Thread-14 :105395 [connectionpool.py:_new_conn():961] Starting new HTTPS connection (1): api.wandb.ai:443
+2020-02-05 12:44:44,291 DEBUG   Thread-14 :105395 [connectionpool.py:_make_request():437] https://api.wandb.ai:443 "POST /graphql HTTP/1.1" 200 716
+2020-02-05 12:44:44,299 INFO    Thread-14 :105395 [run_manager.py:_upsert_run():1037] saving patches
+2020-02-05 12:44:44,300 DEBUG   Thread-14 :105395 [cmd.py:execute():728] Popen(['git', 'rev-parse', '--show-toplevel'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
+2020-02-05 12:44:44,305 DEBUG   Thread-14 :105395 [cmd.py:execute():728] Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
+2020-02-05 12:44:44,311 DEBUG   Thread-14 :105395 [cmd.py:execute():728] Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
+2020-02-05 12:44:44,331 DEBUG   Thread-14 :105395 [cmd.py:execute():728] Popen(['git', 'version'], cwd=/home/blackfalcon/gitstuff/Detecting-Spoof-Emails-with-Information-Fusion, universal_newlines=False, shell=None, istream=None)
